// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_map.proto

package org.apache.flink.formats.protobuf.testproto;

/**
 * Protobuf type {@code org.apache.flink.formats.protobuf.proto.MapTest}
 */
public final class MapTest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:org.apache.flink.formats.protobuf.proto.MapTest)
    MapTestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use MapTest.newBuilder() to construct.
  private MapTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MapTest() {
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new MapTest();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private MapTest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            bitField0_ |= 0x00000001;
            a_ = input.readInt32();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              map1_ = com.google.protobuf.MapField.newMapField(
                  Map1DefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<String, String>
            map1__ = input.readMessage(
                Map1DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            map1_.getMutableMap().put(
                map1__.getKey(), map1__.getValue());
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              map2_ = com.google.protobuf.MapField.newMapField(
                  Map2DefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<String, InnerMessageTest>
            map2__ = input.readMessage(
                Map2DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            map2_.getMutableMap().put(
                map2__.getKey(), map2__.getValue());
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              map3_ = com.google.protobuf.MapField.newMapField(
                  Map3DefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<String, com.google.protobuf.ByteString>
            map3__ = input.readMessage(
                Map3DefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            map3_.getMutableMap().put(
                map3__.getKey(), map3__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 2:
        return internalGetMap1();
      case 3:
        return internalGetMap2();
      case 4:
        return internalGetMap3();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            MapTest.class, Builder.class);
  }

  public interface InnerMessageTestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 a = 1;</code>
     * @return Whether the a field is set.
     */
    boolean hasA();
    /**
     * <code>optional int32 a = 1;</code>
     * @return The a.
     */
    int getA();

    /**
     * <code>optional int64 b = 2;</code>
     * @return Whether the b field is set.
     */
    boolean hasB();
    /**
     * <code>optional int64 b = 2;</code>
     * @return The b.
     */
    long getB();
  }
  /**
   * Protobuf type {@code org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest}
   */
  public static final class InnerMessageTest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest)
      InnerMessageTestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InnerMessageTest.newBuilder() to construct.
    private InnerMessageTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InnerMessageTest() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new InnerMessageTest();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InnerMessageTest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              a_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              b_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_InnerMessageTest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_InnerMessageTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              InnerMessageTest.class, Builder.class);
    }

    private int bitField0_;
    public static final int A_FIELD_NUMBER = 1;
    private int a_;
    /**
     * <code>optional int32 a = 1;</code>
     * @return Whether the a field is set.
     */
    @Override
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 a = 1;</code>
     * @return The a.
     */
    @Override
    public int getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private long b_;
    /**
     * <code>optional int64 b = 2;</code>
     * @return Whether the b field is set.
     */
    @Override
    public boolean hasB() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int64 b = 2;</code>
     * @return The b.
     */
    @Override
    public long getB() {
      return b_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, a_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, b_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, a_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, b_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof InnerMessageTest)) {
        return super.equals(obj);
      }
      InnerMessageTest other = (InnerMessageTest) obj;

      if (hasA() != other.hasA()) return false;
      if (hasA()) {
        if (getA()
            != other.getA()) return false;
      }
      if (hasB() != other.hasB()) return false;
      if (hasB()) {
        if (getB()
            != other.getB()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasA()) {
        hash = (37 * hash) + A_FIELD_NUMBER;
        hash = (53 * hash) + getA();
      }
      if (hasB()) {
        hash = (37 * hash) + B_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getB());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static InnerMessageTest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InnerMessageTest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InnerMessageTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InnerMessageTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InnerMessageTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static InnerMessageTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static InnerMessageTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static InnerMessageTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static InnerMessageTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static InnerMessageTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static InnerMessageTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static InnerMessageTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(InnerMessageTest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest)
        InnerMessageTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_InnerMessageTest_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_InnerMessageTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                InnerMessageTest.class, Builder.class);
      }

      // Construct using org.apache.flink.formats.protobuf.testproto.MapTest.InnerMessageTest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        b_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_InnerMessageTest_descriptor;
      }

      @Override
      public InnerMessageTest getDefaultInstanceForType() {
        return InnerMessageTest.getDefaultInstance();
      }

      @Override
      public InnerMessageTest build() {
        InnerMessageTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public InnerMessageTest buildPartial() {
        InnerMessageTest result = new InnerMessageTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.a_ = a_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.b_ = b_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof InnerMessageTest) {
          return mergeFrom((InnerMessageTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(InnerMessageTest other) {
        if (other == InnerMessageTest.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        InnerMessageTest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (InnerMessageTest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int a_ ;
      /**
       * <code>optional int32 a = 1;</code>
       * @return Whether the a field is set.
       */
      @Override
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 a = 1;</code>
       * @return The a.
       */
      @Override
      public int getA() {
        return a_;
      }
      /**
       * <code>optional int32 a = 1;</code>
       * @param value The a to set.
       * @return This builder for chaining.
       */
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 a = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        onChanged();
        return this;
      }

      private long b_ ;
      /**
       * <code>optional int64 b = 2;</code>
       * @return Whether the b field is set.
       */
      @Override
      public boolean hasB() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int64 b = 2;</code>
       * @return The b.
       */
      @Override
      public long getB() {
        return b_;
      }
      /**
       * <code>optional int64 b = 2;</code>
       * @param value The b to set.
       * @return This builder for chaining.
       */
      public Builder setB(long value) {
        bitField0_ |= 0x00000002;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 b = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest)
    }

    // @@protoc_insertion_point(class_scope:org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest)
    private static final InnerMessageTest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new InnerMessageTest();
    }

    public static InnerMessageTest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<InnerMessageTest>
        PARSER = new com.google.protobuf.AbstractParser<InnerMessageTest>() {
      @Override
      public InnerMessageTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InnerMessageTest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InnerMessageTest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<InnerMessageTest> getParserForType() {
      return PARSER;
    }

    @Override
    public InnerMessageTest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int A_FIELD_NUMBER = 1;
  private int a_;
  /**
   * <code>optional int32 a = 1;</code>
   * @return Whether the a field is set.
   */
  @Override
  public boolean hasA() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional int32 a = 1;</code>
   * @return The a.
   */
  @Override
  public int getA() {
    return a_;
  }

  public static final int MAP1_FIELD_NUMBER = 2;
  private static final class Map1DefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, String> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, String>newDefaultInstance(
                TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_Map1Entry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapField<
      String, String> map1_;
  private com.google.protobuf.MapField<String, String>
  internalGetMap1() {
    if (map1_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          Map1DefaultEntryHolder.defaultEntry);
    }
    return map1_;
  }

  public int getMap1Count() {
    return internalGetMap1().getMap().size();
  }
  /**
   * <code>map&lt;string, string&gt; map1 = 2;</code>
   */

  @Override
  public boolean containsMap1(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    return internalGetMap1().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMap1Map()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, String> getMap1() {
    return getMap1Map();
  }
  /**
   * <code>map&lt;string, string&gt; map1 = 2;</code>
   */
  @Override

  public java.util.Map<String, String> getMap1Map() {
    return internalGetMap1().getMap();
  }
  /**
   * <code>map&lt;string, string&gt; map1 = 2;</code>
   */
  @Override

  public String getMap1OrDefault(
      String key,
      String defaultValue) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, String> map =
        internalGetMap1().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, string&gt; map1 = 2;</code>
   */
  @Override

  public String getMap1OrThrow(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, String> map =
        internalGetMap1().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int MAP2_FIELD_NUMBER = 3;
  private static final class Map2DefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, InnerMessageTest> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, InnerMessageTest>newDefaultInstance(
                TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_Map2Entry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                InnerMessageTest.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      String, InnerMessageTest> map2_;
  private com.google.protobuf.MapField<String, InnerMessageTest>
  internalGetMap2() {
    if (map2_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          Map2DefaultEntryHolder.defaultEntry);
    }
    return map2_;
  }

  public int getMap2Count() {
    return internalGetMap2().getMap().size();
  }
  /**
   * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
   */

  @Override
  public boolean containsMap2(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    return internalGetMap2().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMap2Map()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, InnerMessageTest> getMap2() {
    return getMap2Map();
  }
  /**
   * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
   */
  @Override

  public java.util.Map<String, InnerMessageTest> getMap2Map() {
    return internalGetMap2().getMap();
  }
  /**
   * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
   */
  @Override

  public InnerMessageTest getMap2OrDefault(
      String key,
      InnerMessageTest defaultValue) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, InnerMessageTest> map =
        internalGetMap2().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
   */
  @Override

  public InnerMessageTest getMap2OrThrow(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, InnerMessageTest> map =
        internalGetMap2().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int MAP3_FIELD_NUMBER = 4;
  private static final class Map3DefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        String, com.google.protobuf.ByteString> defaultEntry =
            com.google.protobuf.MapEntry
            .<String, com.google.protobuf.ByteString>newDefaultInstance(
                TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_Map3Entry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.BYTES,
                com.google.protobuf.ByteString.EMPTY);
  }
  private com.google.protobuf.MapField<
      String, com.google.protobuf.ByteString> map3_;
  private com.google.protobuf.MapField<String, com.google.protobuf.ByteString>
  internalGetMap3() {
    if (map3_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          Map3DefaultEntryHolder.defaultEntry);
    }
    return map3_;
  }

  public int getMap3Count() {
    return internalGetMap3().getMap().size();
  }
  /**
   * <code>map&lt;string, bytes&gt; map3 = 4;</code>
   */

  @Override
  public boolean containsMap3(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    return internalGetMap3().getMap().containsKey(key);
  }
  /**
   * Use {@link #getMap3Map()} instead.
   */
  @Override
  @Deprecated
  public java.util.Map<String, com.google.protobuf.ByteString> getMap3() {
    return getMap3Map();
  }
  /**
   * <code>map&lt;string, bytes&gt; map3 = 4;</code>
   */
  @Override

  public java.util.Map<String, com.google.protobuf.ByteString> getMap3Map() {
    return internalGetMap3().getMap();
  }
  /**
   * <code>map&lt;string, bytes&gt; map3 = 4;</code>
   */
  @Override

  public com.google.protobuf.ByteString getMap3OrDefault(
      String key,
      com.google.protobuf.ByteString defaultValue) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, com.google.protobuf.ByteString> map =
        internalGetMap3().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, bytes&gt; map3 = 4;</code>
   */
  @Override

  public com.google.protobuf.ByteString getMap3OrThrow(
      String key) {
    if (key == null) { throw new NullPointerException(); }
    java.util.Map<String, com.google.protobuf.ByteString> map =
        internalGetMap3().getMap();
    if (!map.containsKey(key)) {
      throw new IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeInt32(1, a_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMap1(),
        Map1DefaultEntryHolder.defaultEntry,
        2);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMap2(),
        Map2DefaultEntryHolder.defaultEntry,
        3);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetMap3(),
        Map3DefaultEntryHolder.defaultEntry,
        4);
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, a_);
    }
    for (java.util.Map.Entry<String, String> entry
         : internalGetMap1().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, String>
      map1__ = Map1DefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, map1__);
    }
    for (java.util.Map.Entry<String, InnerMessageTest> entry
         : internalGetMap2().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, InnerMessageTest>
      map2__ = Map2DefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, map2__);
    }
    for (java.util.Map.Entry<String, com.google.protobuf.ByteString> entry
         : internalGetMap3().getMap().entrySet()) {
      com.google.protobuf.MapEntry<String, com.google.protobuf.ByteString>
      map3__ = Map3DefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, map3__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof MapTest)) {
      return super.equals(obj);
    }
    MapTest other = (MapTest) obj;

    if (hasA() != other.hasA()) return false;
    if (hasA()) {
      if (getA()
          != other.getA()) return false;
    }
    if (!internalGetMap1().equals(
        other.internalGetMap1())) return false;
    if (!internalGetMap2().equals(
        other.internalGetMap2())) return false;
    if (!internalGetMap3().equals(
        other.internalGetMap3())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasA()) {
      hash = (37 * hash) + A_FIELD_NUMBER;
      hash = (53 * hash) + getA();
    }
    if (!internalGetMap1().getMap().isEmpty()) {
      hash = (37 * hash) + MAP1_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMap1().hashCode();
    }
    if (!internalGetMap2().getMap().isEmpty()) {
      hash = (37 * hash) + MAP2_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMap2().hashCode();
    }
    if (!internalGetMap3().getMap().isEmpty()) {
      hash = (37 * hash) + MAP3_FIELD_NUMBER;
      hash = (53 * hash) + internalGetMap3().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static MapTest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MapTest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MapTest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MapTest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MapTest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static MapTest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static MapTest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static MapTest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static MapTest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static MapTest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static MapTest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static MapTest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(MapTest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.apache.flink.formats.protobuf.proto.MapTest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.apache.flink.formats.protobuf.proto.MapTest)
      MapTestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMap1();
        case 3:
          return internalGetMap2();
        case 4:
          return internalGetMap3();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetMutableMap1();
        case 3:
          return internalGetMutableMap2();
        case 4:
          return internalGetMutableMap3();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MapTest.class, Builder.class);
    }

    // Construct using org.apache.flink.formats.protobuf.testproto.MapTest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      a_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      internalGetMutableMap1().clear();
      internalGetMutableMap2().clear();
      internalGetMutableMap3().clear();
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return TestMap.internal_static_org_apache_flink_formats_protobuf_proto_MapTest_descriptor;
    }

    @Override
    public MapTest getDefaultInstanceForType() {
      return MapTest.getDefaultInstance();
    }

    @Override
    public MapTest build() {
      MapTest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public MapTest buildPartial() {
      MapTest result = new MapTest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.a_ = a_;
        to_bitField0_ |= 0x00000001;
      }
      result.map1_ = internalGetMap1();
      result.map1_.makeImmutable();
      result.map2_ = internalGetMap2();
      result.map2_.makeImmutable();
      result.map3_ = internalGetMap3();
      result.map3_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof MapTest) {
        return mergeFrom((MapTest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(MapTest other) {
      if (other == MapTest.getDefaultInstance()) return this;
      if (other.hasA()) {
        setA(other.getA());
      }
      internalGetMutableMap1().mergeFrom(
          other.internalGetMap1());
      internalGetMutableMap2().mergeFrom(
          other.internalGetMap2());
      internalGetMutableMap3().mergeFrom(
          other.internalGetMap3());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      MapTest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (MapTest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int a_ ;
    /**
     * <code>optional int32 a = 1;</code>
     * @return Whether the a field is set.
     */
    @Override
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 a = 1;</code>
     * @return The a.
     */
    @Override
    public int getA() {
      return a_;
    }
    /**
     * <code>optional int32 a = 1;</code>
     * @param value The a to set.
     * @return This builder for chaining.
     */
    public Builder setA(int value) {
      bitField0_ |= 0x00000001;
      a_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 a = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearA() {
      bitField0_ = (bitField0_ & ~0x00000001);
      a_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        String, String> map1_;
    private com.google.protobuf.MapField<String, String>
    internalGetMap1() {
      if (map1_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Map1DefaultEntryHolder.defaultEntry);
      }
      return map1_;
    }
    private com.google.protobuf.MapField<String, String>
    internalGetMutableMap1() {
      onChanged();;
      if (map1_ == null) {
        map1_ = com.google.protobuf.MapField.newMapField(
            Map1DefaultEntryHolder.defaultEntry);
      }
      if (!map1_.isMutable()) {
        map1_ = map1_.copy();
      }
      return map1_;
    }

    public int getMap1Count() {
      return internalGetMap1().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map1 = 2;</code>
     */

    @Override
    public boolean containsMap1(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetMap1().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMap1Map()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, String> getMap1() {
      return getMap1Map();
    }
    /**
     * <code>map&lt;string, string&gt; map1 = 2;</code>
     */
    @Override

    public java.util.Map<String, String> getMap1Map() {
      return internalGetMap1().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map1 = 2;</code>
     */
    @Override

    public String getMap1OrDefault(
        String key,
        String defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetMap1().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map1 = 2;</code>
     */
    @Override

    public String getMap1OrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, String> map =
          internalGetMap1().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearMap1() {
      internalGetMutableMap1().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; map1 = 2;</code>
     */

    public Builder removeMap1(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      internalGetMutableMap1().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, String>
    getMutableMap1() {
      return internalGetMutableMap1().getMutableMap();
    }
    /**
     * <code>map&lt;string, string&gt; map1 = 2;</code>
     */
    public Builder putMap1(
        String key,
        String value) {
      if (key == null) { throw new NullPointerException(); }
      if (value == null) { throw new NullPointerException(); }
      internalGetMutableMap1().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, string&gt; map1 = 2;</code>
     */

    public Builder putAllMap1(
        java.util.Map<String, String> values) {
      internalGetMutableMap1().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        String, InnerMessageTest> map2_;
    private com.google.protobuf.MapField<String, InnerMessageTest>
    internalGetMap2() {
      if (map2_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Map2DefaultEntryHolder.defaultEntry);
      }
      return map2_;
    }
    private com.google.protobuf.MapField<String, InnerMessageTest>
    internalGetMutableMap2() {
      onChanged();;
      if (map2_ == null) {
        map2_ = com.google.protobuf.MapField.newMapField(
            Map2DefaultEntryHolder.defaultEntry);
      }
      if (!map2_.isMutable()) {
        map2_ = map2_.copy();
      }
      return map2_;
    }

    public int getMap2Count() {
      return internalGetMap2().getMap().size();
    }
    /**
     * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
     */

    @Override
    public boolean containsMap2(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetMap2().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMap2Map()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, InnerMessageTest> getMap2() {
      return getMap2Map();
    }
    /**
     * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
     */
    @Override

    public java.util.Map<String, InnerMessageTest> getMap2Map() {
      return internalGetMap2().getMap();
    }
    /**
     * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
     */
    @Override

    public InnerMessageTest getMap2OrDefault(
        String key,
        InnerMessageTest defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, InnerMessageTest> map =
          internalGetMap2().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
     */
    @Override

    public InnerMessageTest getMap2OrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, InnerMessageTest> map =
          internalGetMap2().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearMap2() {
      internalGetMutableMap2().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
     */

    public Builder removeMap2(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      internalGetMutableMap2().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, InnerMessageTest>
    getMutableMap2() {
      return internalGetMutableMap2().getMutableMap();
    }
    /**
     * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
     */
    public Builder putMap2(
        String key,
        InnerMessageTest value) {
      if (key == null) { throw new NullPointerException(); }
      if (value == null) { throw new NullPointerException(); }
      internalGetMutableMap2().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .org.apache.flink.formats.protobuf.proto.MapTest.InnerMessageTest&gt; map2 = 3;</code>
     */

    public Builder putAllMap2(
        java.util.Map<String, InnerMessageTest> values) {
      internalGetMutableMap2().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        String, com.google.protobuf.ByteString> map3_;
    private com.google.protobuf.MapField<String, com.google.protobuf.ByteString>
    internalGetMap3() {
      if (map3_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            Map3DefaultEntryHolder.defaultEntry);
      }
      return map3_;
    }
    private com.google.protobuf.MapField<String, com.google.protobuf.ByteString>
    internalGetMutableMap3() {
      onChanged();;
      if (map3_ == null) {
        map3_ = com.google.protobuf.MapField.newMapField(
            Map3DefaultEntryHolder.defaultEntry);
      }
      if (!map3_.isMutable()) {
        map3_ = map3_.copy();
      }
      return map3_;
    }

    public int getMap3Count() {
      return internalGetMap3().getMap().size();
    }
    /**
     * <code>map&lt;string, bytes&gt; map3 = 4;</code>
     */

    @Override
    public boolean containsMap3(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      return internalGetMap3().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMap3Map()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<String, com.google.protobuf.ByteString> getMap3() {
      return getMap3Map();
    }
    /**
     * <code>map&lt;string, bytes&gt; map3 = 4;</code>
     */
    @Override

    public java.util.Map<String, com.google.protobuf.ByteString> getMap3Map() {
      return internalGetMap3().getMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; map3 = 4;</code>
     */
    @Override

    public com.google.protobuf.ByteString getMap3OrDefault(
        String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, com.google.protobuf.ByteString> map =
          internalGetMap3().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, bytes&gt; map3 = 4;</code>
     */
    @Override

    public com.google.protobuf.ByteString getMap3OrThrow(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      java.util.Map<String, com.google.protobuf.ByteString> map =
          internalGetMap3().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearMap3() {
      internalGetMutableMap3().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, bytes&gt; map3 = 4;</code>
     */

    public Builder removeMap3(
        String key) {
      if (key == null) { throw new NullPointerException(); }
      internalGetMutableMap3().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @Deprecated
    public java.util.Map<String, com.google.protobuf.ByteString>
    getMutableMap3() {
      return internalGetMutableMap3().getMutableMap();
    }
    /**
     * <code>map&lt;string, bytes&gt; map3 = 4;</code>
     */
    public Builder putMap3(
        String key,
        com.google.protobuf.ByteString value) {
      if (key == null) { throw new NullPointerException(); }
      if (value == null) { throw new NullPointerException(); }
      internalGetMutableMap3().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, bytes&gt; map3 = 4;</code>
     */

    public Builder putAllMap3(
        java.util.Map<String, com.google.protobuf.ByteString> values) {
      internalGetMutableMap3().getMutableMap()
          .putAll(values);
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:org.apache.flink.formats.protobuf.proto.MapTest)
  }

  // @@protoc_insertion_point(class_scope:org.apache.flink.formats.protobuf.proto.MapTest)
  private static final MapTest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new MapTest();
  }

  public static MapTest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @Deprecated public static final com.google.protobuf.Parser<MapTest>
      PARSER = new com.google.protobuf.AbstractParser<MapTest>() {
    @Override
    public MapTest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MapTest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MapTest> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<MapTest> getParserForType() {
    return PARSER;
  }

  @Override
  public MapTest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

